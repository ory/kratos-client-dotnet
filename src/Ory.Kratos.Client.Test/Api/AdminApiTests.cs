/*
 * Ory Kratos API
 *
 * Documentation for all public and administrative Ory Kratos APIs. Public and administrative APIs are exposed on different ports. Public APIs can face the public internet without any protection while administrative APIs should never be exposed without prior authorization. To protect the administative API port you should use something like Nginx, Ory Oathkeeper, or any other technology capable of authorizing incoming requests. 
 *
 * The version of the OpenAPI document: v0.6.0-alpha.15
 * Contact: hi@ory.sh
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Ory.Kratos.Client.Client;
using Ory.Kratos.Client.Api;
// uncomment below to import models
//using Ory.Kratos.Client.Model;

namespace Ory.Kratos.Client.Test.Api
{
    /// <summary>
    ///  Class for testing AdminApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AdminApiTests : IDisposable
    {
        private AdminApi instance;

        public AdminApiTests()
        {
            instance = new AdminApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AdminApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AdminApi
            //Assert.IsType<AdminApi>(instance);
        }

        /// <summary>
        /// Test CreateIdentity
        /// </summary>
        [Fact]
        public void CreateIdentityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //KratosCreateIdentity kratosCreateIdentity = null;
            //var response = instance.CreateIdentity(kratosCreateIdentity);
            //Assert.IsType<KratosIdentity>(response);
        }

        /// <summary>
        /// Test CreateRecoveryLink
        /// </summary>
        [Fact]
        public void CreateRecoveryLinkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //KratosCreateRecoveryLink kratosCreateRecoveryLink = null;
            //var response = instance.CreateRecoveryLink(kratosCreateRecoveryLink);
            //Assert.IsType<KratosRecoveryLink>(response);
        }

        /// <summary>
        /// Test DeleteIdentity
        /// </summary>
        [Fact]
        public void DeleteIdentityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeleteIdentity(id);
        }

        /// <summary>
        /// Test GetIdentity
        /// </summary>
        [Fact]
        public void GetIdentityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetIdentity(id);
            //Assert.IsType<KratosIdentity>(response);
        }

        /// <summary>
        /// Test GetSchema
        /// </summary>
        [Fact]
        public void GetSchemaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetSchema(id);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test GetSelfServiceError
        /// </summary>
        [Fact]
        public void GetSelfServiceErrorTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string error = null;
            //var response = instance.GetSelfServiceError(error);
            //Assert.IsType<KratosErrorContainer>(response);
        }

        /// <summary>
        /// Test GetSelfServiceLoginFlow
        /// </summary>
        [Fact]
        public void GetSelfServiceLoginFlowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetSelfServiceLoginFlow(id);
            //Assert.IsType<KratosLoginFlow>(response);
        }

        /// <summary>
        /// Test GetSelfServiceRecoveryFlow
        /// </summary>
        [Fact]
        public void GetSelfServiceRecoveryFlowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetSelfServiceRecoveryFlow(id);
            //Assert.IsType<KratosRecoveryFlow>(response);
        }

        /// <summary>
        /// Test GetSelfServiceRegistrationFlow
        /// </summary>
        [Fact]
        public void GetSelfServiceRegistrationFlowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetSelfServiceRegistrationFlow(id);
            //Assert.IsType<KratosRegistrationFlow>(response);
        }

        /// <summary>
        /// Test GetSelfServiceSettingsFlow
        /// </summary>
        [Fact]
        public void GetSelfServiceSettingsFlowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetSelfServiceSettingsFlow(id);
            //Assert.IsType<KratosSettingsFlow>(response);
        }

        /// <summary>
        /// Test GetSelfServiceVerificationFlow
        /// </summary>
        [Fact]
        public void GetSelfServiceVerificationFlowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetSelfServiceVerificationFlow(id);
            //Assert.IsType<KratosVerificationFlow>(response);
        }

        /// <summary>
        /// Test GetVersion
        /// </summary>
        [Fact]
        public void GetVersionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetVersion();
            //Assert.IsType<KratosInlineResponse2001>(response);
        }

        /// <summary>
        /// Test IsAlive
        /// </summary>
        [Fact]
        public void IsAliveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.IsAlive();
            //Assert.IsType<KratosInlineResponse200>(response);
        }

        /// <summary>
        /// Test IsReady
        /// </summary>
        [Fact]
        public void IsReadyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.IsReady();
            //Assert.IsType<KratosInlineResponse200>(response);
        }

        /// <summary>
        /// Test ListIdentities
        /// </summary>
        [Fact]
        public void ListIdentitiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? perPage = null;
            //long? page = null;
            //var response = instance.ListIdentities(perPage, page);
            //Assert.IsType<List<KratosIdentity>>(response);
        }

        /// <summary>
        /// Test Prometheus
        /// </summary>
        [Fact]
        public void PrometheusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.Prometheus();
        }

        /// <summary>
        /// Test UpdateIdentity
        /// </summary>
        [Fact]
        public void UpdateIdentityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //KratosUpdateIdentity kratosUpdateIdentity = null;
            //var response = instance.UpdateIdentity(id, kratosUpdateIdentity);
            //Assert.IsType<KratosIdentity>(response);
        }
    }
}
