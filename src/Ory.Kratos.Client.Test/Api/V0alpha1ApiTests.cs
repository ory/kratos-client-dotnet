/*
 * Ory Kratos API
 *
 * Documentation for all public and administrative Ory Kratos APIs. Public and administrative APIs are exposed on different ports. Public APIs can face the public internet without any protection while administrative APIs should never be exposed without prior authorization. To protect the administative API port you should use something like Nginx, Ory Oathkeeper, or any other technology capable of authorizing incoming requests. 
 *
 * The version of the OpenAPI document: v0.7.0-alpha.1
 * Contact: hi@ory.sh
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Ory.Kratos.Client.Client;
using Ory.Kratos.Client.Api;
// uncomment below to import models
//using Ory.Kratos.Client.Model;

namespace Ory.Kratos.Client.Test.Api
{
    /// <summary>
    ///  Class for testing V0alpha1Api
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class V0alpha1ApiTests : IDisposable
    {
        private V0alpha1Api instance;

        public V0alpha1ApiTests()
        {
            instance = new V0alpha1Api();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of V0alpha1Api
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' V0alpha1Api
            //Assert.IsType<V0alpha1Api>(instance);
        }

        /// <summary>
        /// Test AdminCreateIdentity
        /// </summary>
        [Fact]
        public void AdminCreateIdentityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //KratosAdminCreateIdentityBody kratosAdminCreateIdentityBody = null;
            //var response = instance.AdminCreateIdentity(kratosAdminCreateIdentityBody);
            //Assert.IsType<KratosIdentity>(response);
        }

        /// <summary>
        /// Test AdminCreateSelfServiceRecoveryLink
        /// </summary>
        [Fact]
        public void AdminCreateSelfServiceRecoveryLinkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //KratosAdminCreateSelfServiceRecoveryLinkBody kratosAdminCreateSelfServiceRecoveryLinkBody = null;
            //var response = instance.AdminCreateSelfServiceRecoveryLink(kratosAdminCreateSelfServiceRecoveryLinkBody);
            //Assert.IsType<KratosSelfServiceRecoveryLink>(response);
        }

        /// <summary>
        /// Test AdminDeleteIdentity
        /// </summary>
        [Fact]
        public void AdminDeleteIdentityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.AdminDeleteIdentity(id);
        }

        /// <summary>
        /// Test AdminGetIdentity
        /// </summary>
        [Fact]
        public void AdminGetIdentityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.AdminGetIdentity(id);
            //Assert.IsType<KratosIdentity>(response);
        }

        /// <summary>
        /// Test AdminListIdentities
        /// </summary>
        [Fact]
        public void AdminListIdentitiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? perPage = null;
            //long? page = null;
            //var response = instance.AdminListIdentities(perPage, page);
            //Assert.IsType<List<KratosIdentity>>(response);
        }

        /// <summary>
        /// Test AdminUpdateIdentity
        /// </summary>
        [Fact]
        public void AdminUpdateIdentityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //KratosAdminUpdateIdentityBody kratosAdminUpdateIdentityBody = null;
            //var response = instance.AdminUpdateIdentity(id, kratosAdminUpdateIdentityBody);
            //Assert.IsType<KratosIdentity>(response);
        }

        /// <summary>
        /// Test CreateSelfServiceLogoutFlowUrlForBrowsers
        /// </summary>
        [Fact]
        public void CreateSelfServiceLogoutFlowUrlForBrowsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string cookie = null;
            //var response = instance.CreateSelfServiceLogoutFlowUrlForBrowsers(cookie);
            //Assert.IsType<KratosSelfServiceLogoutUrl>(response);
        }

        /// <summary>
        /// Test GetJsonSchema
        /// </summary>
        [Fact]
        public void GetJsonSchemaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetJsonSchema(id);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test GetSelfServiceError
        /// </summary>
        [Fact]
        public void GetSelfServiceErrorTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetSelfServiceError(id);
            //Assert.IsType<KratosSelfServiceError>(response);
        }

        /// <summary>
        /// Test GetSelfServiceLoginFlow
        /// </summary>
        [Fact]
        public void GetSelfServiceLoginFlowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string cookie = null;
            //var response = instance.GetSelfServiceLoginFlow(id, cookie);
            //Assert.IsType<KratosSelfServiceLoginFlow>(response);
        }

        /// <summary>
        /// Test GetSelfServiceRecoveryFlow
        /// </summary>
        [Fact]
        public void GetSelfServiceRecoveryFlowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string cookie = null;
            //var response = instance.GetSelfServiceRecoveryFlow(id, cookie);
            //Assert.IsType<KratosSelfServiceRecoveryFlow>(response);
        }

        /// <summary>
        /// Test GetSelfServiceRegistrationFlow
        /// </summary>
        [Fact]
        public void GetSelfServiceRegistrationFlowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string cookie = null;
            //var response = instance.GetSelfServiceRegistrationFlow(id, cookie);
            //Assert.IsType<KratosSelfServiceRegistrationFlow>(response);
        }

        /// <summary>
        /// Test GetSelfServiceSettingsFlow
        /// </summary>
        [Fact]
        public void GetSelfServiceSettingsFlowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string xSessionToken = null;
            //string cookie = null;
            //var response = instance.GetSelfServiceSettingsFlow(id, xSessionToken, cookie);
            //Assert.IsType<KratosSelfServiceSettingsFlow>(response);
        }

        /// <summary>
        /// Test GetSelfServiceVerificationFlow
        /// </summary>
        [Fact]
        public void GetSelfServiceVerificationFlowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string cookie = null;
            //var response = instance.GetSelfServiceVerificationFlow(id, cookie);
            //Assert.IsType<KratosSelfServiceVerificationFlow>(response);
        }

        /// <summary>
        /// Test InitializeSelfServiceLoginFlowForBrowsers
        /// </summary>
        [Fact]
        public void InitializeSelfServiceLoginFlowForBrowsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? refresh = null;
            //var response = instance.InitializeSelfServiceLoginFlowForBrowsers(refresh);
            //Assert.IsType<KratosSelfServiceLoginFlow>(response);
        }

        /// <summary>
        /// Test InitializeSelfServiceLoginFlowWithoutBrowser
        /// </summary>
        [Fact]
        public void InitializeSelfServiceLoginFlowWithoutBrowserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? refresh = null;
            //var response = instance.InitializeSelfServiceLoginFlowWithoutBrowser(refresh);
            //Assert.IsType<KratosSelfServiceLoginFlow>(response);
        }

        /// <summary>
        /// Test InitializeSelfServiceRecoveryFlowForBrowsers
        /// </summary>
        [Fact]
        public void InitializeSelfServiceRecoveryFlowForBrowsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.InitializeSelfServiceRecoveryFlowForBrowsers();
            //Assert.IsType<KratosSelfServiceRecoveryFlow>(response);
        }

        /// <summary>
        /// Test InitializeSelfServiceRecoveryFlowWithoutBrowser
        /// </summary>
        [Fact]
        public void InitializeSelfServiceRecoveryFlowWithoutBrowserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.InitializeSelfServiceRecoveryFlowWithoutBrowser();
            //Assert.IsType<KratosSelfServiceRecoveryFlow>(response);
        }

        /// <summary>
        /// Test InitializeSelfServiceRegistrationFlowForBrowsers
        /// </summary>
        [Fact]
        public void InitializeSelfServiceRegistrationFlowForBrowsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.InitializeSelfServiceRegistrationFlowForBrowsers();
            //Assert.IsType<KratosSelfServiceRegistrationFlow>(response);
        }

        /// <summary>
        /// Test InitializeSelfServiceRegistrationFlowWithoutBrowser
        /// </summary>
        [Fact]
        public void InitializeSelfServiceRegistrationFlowWithoutBrowserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.InitializeSelfServiceRegistrationFlowWithoutBrowser();
            //Assert.IsType<KratosSelfServiceRegistrationFlow>(response);
        }

        /// <summary>
        /// Test InitializeSelfServiceSettingsFlowForBrowsers
        /// </summary>
        [Fact]
        public void InitializeSelfServiceSettingsFlowForBrowsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string cookie = null;
            //var response = instance.InitializeSelfServiceSettingsFlowForBrowsers(cookie);
            //Assert.IsType<KratosSelfServiceSettingsFlow>(response);
        }

        /// <summary>
        /// Test InitializeSelfServiceSettingsFlowWithoutBrowser
        /// </summary>
        [Fact]
        public void InitializeSelfServiceSettingsFlowWithoutBrowserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xSessionToken = null;
            //var response = instance.InitializeSelfServiceSettingsFlowWithoutBrowser(xSessionToken);
            //Assert.IsType<KratosSelfServiceSettingsFlow>(response);
        }

        /// <summary>
        /// Test InitializeSelfServiceVerificationFlowForBrowsers
        /// </summary>
        [Fact]
        public void InitializeSelfServiceVerificationFlowForBrowsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.InitializeSelfServiceVerificationFlowForBrowsers();
            //Assert.IsType<KratosSelfServiceVerificationFlow>(response);
        }

        /// <summary>
        /// Test InitializeSelfServiceVerificationFlowWithoutBrowser
        /// </summary>
        [Fact]
        public void InitializeSelfServiceVerificationFlowWithoutBrowserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.InitializeSelfServiceVerificationFlowWithoutBrowser();
            //Assert.IsType<KratosSelfServiceVerificationFlow>(response);
        }

        /// <summary>
        /// Test SubmitSelfServiceLoginFlow
        /// </summary>
        [Fact]
        public void SubmitSelfServiceLoginFlowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string flow = null;
            //KratosSubmitSelfServiceLoginFlowBody kratosSubmitSelfServiceLoginFlowBody = null;
            //var response = instance.SubmitSelfServiceLoginFlow(flow, kratosSubmitSelfServiceLoginFlowBody);
            //Assert.IsType<KratosSuccessfulSelfServiceLoginWithoutBrowser>(response);
        }

        /// <summary>
        /// Test SubmitSelfServiceLogoutFlow
        /// </summary>
        [Fact]
        public void SubmitSelfServiceLogoutFlowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string token = null;
            //instance.SubmitSelfServiceLogoutFlow(token);
        }

        /// <summary>
        /// Test SubmitSelfServiceLogoutFlowWithoutBrowser
        /// </summary>
        [Fact]
        public void SubmitSelfServiceLogoutFlowWithoutBrowserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //KratosSubmitSelfServiceLogoutFlowWithoutBrowserBody kratosSubmitSelfServiceLogoutFlowWithoutBrowserBody = null;
            //instance.SubmitSelfServiceLogoutFlowWithoutBrowser(kratosSubmitSelfServiceLogoutFlowWithoutBrowserBody);
        }

        /// <summary>
        /// Test SubmitSelfServiceRecoveryFlow
        /// </summary>
        [Fact]
        public void SubmitSelfServiceRecoveryFlowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string flow = null;
            //string token = null;
            //KratosSubmitSelfServiceRecoveryFlowBody kratosSubmitSelfServiceRecoveryFlowBody = null;
            //var response = instance.SubmitSelfServiceRecoveryFlow(flow, token, kratosSubmitSelfServiceRecoveryFlowBody);
            //Assert.IsType<KratosSelfServiceRecoveryFlow>(response);
        }

        /// <summary>
        /// Test SubmitSelfServiceRegistrationFlow
        /// </summary>
        [Fact]
        public void SubmitSelfServiceRegistrationFlowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string flow = null;
            //KratosSubmitSelfServiceRegistrationFlowBody kratosSubmitSelfServiceRegistrationFlowBody = null;
            //var response = instance.SubmitSelfServiceRegistrationFlow(flow, kratosSubmitSelfServiceRegistrationFlowBody);
            //Assert.IsType<KratosSuccessfulSelfServiceRegistrationWithoutBrowser>(response);
        }

        /// <summary>
        /// Test SubmitSelfServiceSettingsFlow
        /// </summary>
        [Fact]
        public void SubmitSelfServiceSettingsFlowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string flow = null;
            //string xSessionToken = null;
            //KratosSubmitSelfServiceSettingsFlowBody kratosSubmitSelfServiceSettingsFlowBody = null;
            //var response = instance.SubmitSelfServiceSettingsFlow(flow, xSessionToken, kratosSubmitSelfServiceSettingsFlowBody);
            //Assert.IsType<KratosSuccessfulSelfServiceSettingsWithoutBrowser>(response);
        }

        /// <summary>
        /// Test SubmitSelfServiceVerificationFlow
        /// </summary>
        [Fact]
        public void SubmitSelfServiceVerificationFlowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string flow = null;
            //string token = null;
            //KratosSubmitSelfServiceVerificationFlowBody kratosSubmitSelfServiceVerificationFlowBody = null;
            //var response = instance.SubmitSelfServiceVerificationFlow(flow, token, kratosSubmitSelfServiceVerificationFlowBody);
            //Assert.IsType<KratosSelfServiceVerificationFlow>(response);
        }

        /// <summary>
        /// Test ToSession
        /// </summary>
        [Fact]
        public void ToSessionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xSessionToken = null;
            //string cookie = null;
            //var response = instance.ToSession(xSessionToken, cookie);
            //Assert.IsType<KratosSession>(response);
        }
    }
}
