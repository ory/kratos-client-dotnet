/*
 * Ory Kratos API
 *
 * Documentation for all public and administrative Ory Kratos APIs. Public and administrative APIs are exposed on different ports. Public APIs can face the public internet without any protection while administrative APIs should never be exposed without prior authorization. To protect the administative API port you should use something like Nginx, Ory Oathkeeper, or any other technology capable of authorizing incoming requests. 
 *
 * The version of the OpenAPI document: v0.6.0-alpha.15
 * Contact: hi@ory.sh
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Ory.Kratos.Client.Api;
using Ory.Kratos.Client.Model;
using Ory.Kratos.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Ory.Kratos.Client.Test.Model
{
    /// <summary>
    ///  Class for testing KratosImageSummary
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class KratosImageSummaryTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for KratosImageSummary
        //private KratosImageSummary instance;

        public KratosImageSummaryTests()
        {
            // TODO uncomment below to create an instance of KratosImageSummary
            //instance = new KratosImageSummary();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of KratosImageSummary
        /// </summary>
        [Fact]
        public void KratosImageSummaryInstanceTest()
        {
            // TODO uncomment below to test "IsType" KratosImageSummary
            //Assert.IsType<KratosImageSummary>(instance);
        }


        /// <summary>
        /// Test the property 'Containers'
        /// </summary>
        [Fact]
        public void ContainersTest()
        {
            // TODO unit test for the property 'Containers'
        }
        /// <summary>
        /// Test the property 'Created'
        /// </summary>
        [Fact]
        public void CreatedTest()
        {
            // TODO unit test for the property 'Created'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Labels'
        /// </summary>
        [Fact]
        public void LabelsTest()
        {
            // TODO unit test for the property 'Labels'
        }
        /// <summary>
        /// Test the property 'ParentId'
        /// </summary>
        [Fact]
        public void ParentIdTest()
        {
            // TODO unit test for the property 'ParentId'
        }
        /// <summary>
        /// Test the property 'RepoDigests'
        /// </summary>
        [Fact]
        public void RepoDigestsTest()
        {
            // TODO unit test for the property 'RepoDigests'
        }
        /// <summary>
        /// Test the property 'RepoTags'
        /// </summary>
        [Fact]
        public void RepoTagsTest()
        {
            // TODO unit test for the property 'RepoTags'
        }
        /// <summary>
        /// Test the property 'SharedSize'
        /// </summary>
        [Fact]
        public void SharedSizeTest()
        {
            // TODO unit test for the property 'SharedSize'
        }
        /// <summary>
        /// Test the property 'Size'
        /// </summary>
        [Fact]
        public void SizeTest()
        {
            // TODO unit test for the property 'Size'
        }
        /// <summary>
        /// Test the property 'VirtualSize'
        /// </summary>
        [Fact]
        public void VirtualSizeTest()
        {
            // TODO unit test for the property 'VirtualSize'
        }

    }

}
