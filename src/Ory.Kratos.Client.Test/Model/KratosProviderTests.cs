/*
 * Ory Identities API
 *
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * The version of the OpenAPI document: v1.3.6-alpha.1
 * Contact: office@ory.sh
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Ory.Kratos.Client.Model;
using Ory.Kratos.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Ory.Kratos.Client.Test.Model
{
    /// <summary>
    ///  Class for testing KratosProvider
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class KratosProviderTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for KratosProvider
        //private KratosProvider instance;

        public KratosProviderTests()
        {
            // TODO uncomment below to create an instance of KratosProvider
            //instance = new KratosProvider();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of KratosProvider
        /// </summary>
        [Fact]
        public void KratosProviderInstanceTest()
        {
            // TODO uncomment below to test "IsType" KratosProvider
            //Assert.IsType<KratosProvider>(instance);
        }

        /// <summary>
        /// Test the property 'ClientId'
        /// </summary>
        [Fact]
        public void ClientIdTest()
        {
            // TODO unit test for the property 'ClientId'
        }

        /// <summary>
        /// Test the property 'ConfigUrl'
        /// </summary>
        [Fact]
        public void ConfigUrlTest()
        {
            // TODO unit test for the property 'ConfigUrl'
        }

        /// <summary>
        /// Test the property 'DomainHint'
        /// </summary>
        [Fact]
        public void DomainHintTest()
        {
            // TODO unit test for the property 'DomainHint'
        }

        /// <summary>
        /// Test the property 'Fields'
        /// </summary>
        [Fact]
        public void FieldsTest()
        {
            // TODO unit test for the property 'Fields'
        }

        /// <summary>
        /// Test the property 'LoginHint'
        /// </summary>
        [Fact]
        public void LoginHintTest()
        {
            // TODO unit test for the property 'LoginHint'
        }

        /// <summary>
        /// Test the property 'Nonce'
        /// </summary>
        [Fact]
        public void NonceTest()
        {
            // TODO unit test for the property 'Nonce'
        }

        /// <summary>
        /// Test the property 'Parameters'
        /// </summary>
        [Fact]
        public void ParametersTest()
        {
            // TODO unit test for the property 'Parameters'
        }
    }
}
